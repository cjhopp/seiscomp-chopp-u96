.. highlight:: rst

.. _fdsnws2ql:

#########
fdsnws2ql
#########

**Imports event information from FDSN Web services into a QuakeLink server.**


Module Configuration
====================

| :file:`etc/defaults/global.cfg`
| :file:`etc/defaults/fdsnws2ql.cfg`
| :file:`etc/global.cfg`
| :file:`etc/fdsnws2ql.cfg`
| :file:`~/.seiscomp/global.cfg`
| :file:`~/.seiscomp/fdsnws2ql.cfg`

fdsnws2ql inherits :ref:`global options<global-configuration>`.

.. note::

   Modules/plugins may require a license file. The default path to license
   files is :file:`@DATADIR@/licenses/` which can be overridden by global
   configuration of the parameter :confval:`gempa.licensePath`. Example: ::

      gempa.licensePath = @CONFIGDIR@/licenses



.. confval:: server

   Default: ``localhost:18011``

   Type: *string*

   Host name and optional port of QuakeLink server to push data
   to.


.. confval:: ssl

   Default: ``false``

   Type: *boolean*

   Use secure socket layer \(SSL\) for server connection.


.. confval:: backlog

   Default: ``1.0``

   Unit: *d*

   Type: *double*

   Maximum event age given by origin time in days. Events older
   than the specified
   value are neither fetched nor processed and are removed from
   the host specific event journal.


.. confval:: interval

   Default: ``60``

   Unit: *s*

   Type: *int*

   Interval in seconds to request event updates from FDSNWS source.


.. confval:: requestTimeout

   Default: ``10.0``

   Unit: *s*

   Type: *double*

   HTTP request timeout. Abort the request if no bytes have
   been received for the specified number of seconds.


.. confval:: hosts

   Type: *list:string*

   Registration of FDSNWS host profiles.


.. note::
   **significantChange.\***
   *Parameters defining a significant event change which*
   *triggers an event update.*



.. confval:: significantChange.time

   Default: ``true``

   Type: *boolean*

   *No description available*

.. confval:: significantChange.coordinates

   Default: ``true``

   Type: *boolean*

   *No description available*

.. confval:: significantChange.depth

   Default: ``true``

   Type: *boolean*

   *No description available*

.. confval:: significantChange.author

   Default: ``true``

   Type: *boolean*

   *No description available*

.. confval:: significantChange.catalog

   Default: ``true``

   Type: *boolean*

   *No description available*

.. confval:: significantChange.contributor

   Default: ``true``

   Type: *boolean*

   *No description available*

.. confval:: significantChange.contributorID

   Default: ``true``

   Type: *boolean*

   *No description available*

.. confval:: significantChange.magType

   Default: ``true``

   Type: *boolean*

   *No description available*

.. confval:: significantChange.magnitude

   Default: ``true``

   Type: *boolean*

   *No description available*

.. confval:: significantChange.magAuthor

   Default: ``true``

   Type: *boolean*

   *No description available*

.. confval:: significantChange.locationName

   Default: ``true``

   Type: *boolean*

   *No description available*

.. confval:: significantChange.eventType

   Default: ``true``

   Type: *boolean*

   *No description available*

.. note::
   **significantChange.precision.\***
   *Numerical differences in source parameters defining a*
   *significant event change. The corresponding significant*
   *change flag must be enabled for a parameter change to*
   *be considered.*



.. confval:: significantChange.precision.time

   Default: ``1e-02``

   Unit: *s*

   Type: *float*

   Origin time


.. confval:: significantChange.precision.coordinates

   Default: ``1e-06``

   Unit: *deg*

   Type: *float*

   Epicenter


.. confval:: significantChange.precision.depth

   Default: ``1e-03``

   Unit: *km*

   Type: *float*

   Hypocenter depth


.. confval:: significantChange.precision.magnitude

   Default: ``1e-02``

   Type: *float*

   Event magnitude


.. note::
   **host.\***
   *Add host profiles defining connections to FDSNWS*
   *servers. For considering a profile add its name to the*
   *parameter "hosts".*



.. note::

   **host.$name.\***
   *Configure profile parameters depending on the FDSNWS server.*
   $name is a placeholder for the name to be used and needs to be added to :confval:`hosts` to become active.

   .. code-block:: sh

      hosts = a,b
      host.a.value1 = ...
      host.b.value1 = ...
      # c is not active because it has not been added
      # to the list of hosts
      host.c.value1 = ...


.. confval:: host.$name.url

   Default: ``http://localhost``

   Type: *string*

   URL of the FDSNWS service.
   
   Format: [http[s]:\/\/][user:pwd\@][host][:port][path].
   
   If the path is empty the default path \/fdsnws\/event\/1\/query will be added automatically.


.. confval:: host.$name.updatedAfter

   Default: ``false``

   Type: *boolean*

   Defines whether updatedAfter requests are supported
   by this service. If this parameter is set to true,
   all subsequent requests will use the previous
   request time to filter for new event solutions since
   the last request.


.. confval:: host.$name.requestHandler

   Default: ``fdsnws2ql.plugins.fdsnws.FDSNWS``

   Type: *string*

   Plugin implementing custom request and response handling.
   The last component of the path is interpreted as a class
   name which must be derived from
   fdsnws2ql.plugin.RequestHandler in
   \$SEISCOMP_ROOT\/lib\/python\/fdsnws2ql\/plugin.py


.. note::
   **host.$name.filter.\***
   *Defines filter parameters for events to import.*



.. confval:: host.$name.filter.eventTypes

   Type: *list:string*

   Limit to events with a specified eventType. The
   parameter value can be a single item, a
   comma\-separated list of items. Allowed values
   are from SCML or 'unknown' if eventType
   is not given. The SeisComPML event types are
   converted to QuakeML event types before sending
   the request and are converted back to SeisComP
   ML types when the response is evaluated.


.. confval:: host.$name.filter.catalog

   Type: *string*

   Limit to events from a specified catalog.


.. confval:: host.$name.filter.contributor

   Type: *string*

   Limit to events contributed by a specified contributor.


.. note::
   **host.$name.filter.boundingBox.\***
   *The bounding box limiting the epicentral area.*
   *Do not use along with boundingCircle.*



.. confval:: host.$name.filter.boundingBox.minLatitude

   Unit: *deg*

   Type: *float*

   Minimum latitude.


.. confval:: host.$name.filter.boundingBox.maxLatitude

   Unit: *deg*

   Type: *float*

   Maximum latitude.


.. confval:: host.$name.filter.boundingBox.minLongitude

   Unit: *deg*

   Type: *float*

   Minimum longitude.


.. confval:: host.$name.filter.boundingBox.maxLongitude

   Unit: *deg*

   Type: *float*

   Maximum longitude.


.. note::
   **host.$name.filter.boundingCircle.\***
   *The bounding circle limiting the epicentral area.*
   *Depending on the definition of*
   *minRadius and maxRadius the region described*
   *here might be included or excluded by a circle*
   *or bound by two concentric circles.*
   **
   *Do not use along with boundingBox.*



.. confval:: host.$name.filter.boundingCircle.latitude

   Unit: *deg*

   Type: *float*

   Center latitude


.. confval:: host.$name.filter.boundingCircle.longitude

   Unit: *deg*

   Type: *float*

   Center longitude


.. confval:: host.$name.filter.boundingCircle.minRadius

   Unit: *deg*

   Type: *float*

   Minimum epicentral distance from center


.. confval:: host.$name.filter.boundingCircle.maxRadius

   Unit: *deg*

   Type: *float*

   Maximum epicentral distance from center


.. note::
   **host.$name.filter.depth.\***
   *Limits request by hypocenter depth.*



.. confval:: host.$name.filter.depth.min

   Unit: *km*

   Type: *float*

   Minimum depth


.. confval:: host.$name.filter.depth.max

   Unit: *km*

   Type: *float*

   Maximum depth


.. note::
   **host.$name.filter.magnitude.\***
   *Limits request by event magnitude.*



.. confval:: host.$name.filter.magnitude.min

   Type: *float*

   Minimum magnitude


.. confval:: host.$name.filter.magnitude.max

   Type: *float*

   Maximum magnitude


.. confval:: host.$name.filter.magnitude.type

   Type: *string*

   Specifies a magnitude type to use for testing
   the minimum and maximum limits.


.. note::
   **host.$name.content.\***
   *Defines the details for the event content to generate*
   *or to fetch.*



.. confval:: host.$name.content.fetchXML

   Default: ``false``

   Type: *boolean*

   If set to true, an additional request for XML
   data is made for each updated event. Otherwise a
   minimal SCML
   is constructed from the key event parameters
   present in the text format.
   
   Activate this option only if the complete event
   data set including all origins, etc. is required
   by your processing modules.


.. note::
   **host.$name.content.text.\***
   *Parameters controlling the event construction*
   *from the text format summary parameters.*
   *The parameters are ignored if the parameter*
   *"fetchXML" is true (active).*



.. confval:: host.$name.content.text.agencyID

   Type: *string*

   By default the agency of the event and origin
   is set to the value of the contributor column.
   This parameter allows to set a custom agency ID.


.. confval:: host.$name.content.text.evaluationMode

   Default: ``manual``

   Type: *string*

   Origin evaluation mode.


.. confval:: host.$name.content.text.evaluationStatus

   Default: ``confirmed``

   Type: *string*

   Origin evaluation status.


.. note::
   **host.$name.content.xml.\***
   *Defines the details for XML content to fetch.*
   *This section requires the parameter*
   *"fetchXML" to be enabled.*



.. confval:: host.$name.content.xml.sc3ml

   Default: ``false``

   Type: *boolean*

   Some FDSNWS services allow to query event
   information in the native SCML format.
   Activate this option to save the conversion
   step between QuakeML and SCML if sc3ml is
   supported by the server.


.. note::
   **host.$name.content.xml.include.\***
   *Defines SCML structures to include in requests.*



.. confval:: host.$name.content.xml.include.allOrigins

   Default: ``false``

   Type: *boolean*

   Request all origins for events.
   Default is data center
   dependent but is suggested to be the
   preferred origin only.


.. confval:: host.$name.content.xml.include.allMagnitudes

   Default: ``false``

   Type: *boolean*

   Request all magnitudes for events.
   Default is data center
   dependent but is suggested to be the
   preferred magnitude only.


.. confval:: host.$name.content.xml.include.arrivals

   Default: ``false``

   Type: *boolean*

   Request all phase arrivals.


.. note::
   **host.$name.content.xml.xslt.\***
   *Parameters controlling the QuakeML to SCML conversion*
   *using a XSLT script shipped with the SeisComP installation.*



.. confval:: host.$name.content.xml.xslt.version

   Type: *string*

   SCML schema version used during export.
   If not specified, the largest version
   available under \@DATADIR\@\/xml\/ is used.


.. confval:: host.$name.content.xml.xslt.idPrefix

   Type: *string*

   ID prefix to remove from publicID attributes
   and references thereof. The QuakeML schema enforces
   a strict ID schema which causes problems in SeisComP
   applications during processing and visualization.
   E.g., when fetching events from service.iris.edu
   you might want to set this parameter to
   'smi:service.iris.edu\/fdsnws\/event\/1\/query?'


.. confval:: host.$name.content.xml.xslt.custom

   Type: *string*

   Path of a custom XSLT conversion script.



Command-Line Options
====================


Generic
-------

.. option:: -h, --help

   Show help message.

.. option:: -V, --version

   Show version information.

.. option:: --config-file arg

   Use alternative configuration file. When this option is
   used the loading of all stages is disabled. Only the
   given configuration file is parsed and used. To use
   another name for the configuration create a symbolic
   link of the application or copy it. Example:
   scautopick \-> scautopick2.

.. option:: --plugins arg

   Load given plugins.

.. option:: -D, --daemon

   Run as daemon. This means the application will fork itself
   and doesn't need to be started with \&.


Verbosity
---------

.. option:: --verbosity arg

   Verbosity level [0..4]. 0:quiet, 1:error, 2:warning, 3:info,
   4:debug.

.. option:: -v, --v

   Increase verbosity level \(may be repeated, eg. \-vv\).

.. option:: -q, --quiet

   Quiet mode: no logging output.

.. option:: --print-component arg

   For each log entry print the component right after the
   log level. By default the component output is enabled
   for file output but disabled for console output.

.. option:: --component arg

   Limit the logging to a certain component. This option can
   be given more than once.

.. option:: -s, --syslog

   Use syslog logging backend. The output usually goes to
   \/var\/lib\/messages.

.. option:: -l, --lockfile arg

   Path to lock file.

.. option:: --console arg

   Send log output to stdout.

.. option:: --debug

   Execute in debug mode.
   Equivalent to \-\-verbosity\=4 \-\-console\=1 .

.. option:: --trace

   Execute in trace mode.
   Equivalent to \-\-verbosity\=4 \-\-console\=1 \-\-print\-component\=1
   \-\-print\-context\=1 .

.. option:: --log-file arg

   Use alternative log file.

