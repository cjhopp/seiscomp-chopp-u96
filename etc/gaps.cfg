# Specified the location and the structure of the map tiles to be used. This
# path is composed of zero or more directives and must include at least one
# conversion specification which starts with is introduced by the character %
# followed by a conversion specifier. Valid specifiers are s (replaced by tile
# ID), l (tile level), c (tile column) and r (tile row). An example for using
# the OpenStreetMap file structure is /path/to/maps/%l/%c/%r.png.
map.location = @DATADIR@/maps/world-11/world-11-1.3.mbtiles

# IP and port to bind the HTTP server to. Use 0.0.0.0 to bind to all
# interfaces. Either the port or the IP address may be omitted, e.g., "0.0.0.0"
# or ":1234". If set to an empty string the application will run without
# providing a HTTP server.
bind = 0.0.0.0:8080

# Defines the users file for access control. The user file contains one line
# per user where each line is of format "username:encrypted_pwd". To encrypt a
# password mkpasswd can be used. It is recommended to apply a strong algorithm
# such as sha-256 or sha-512. E.g., the command "user=sysop pw=`mkpasswd -m
# sha-512` && echo $user:$pw" would generate a line for the user "sysop".
users = @DATADIR@/gaps/users

# Defines the file used to read user properties. Each line contains the user
# name and a list of properties in format "username:prop1,prop2,prop3". Those
# properties are used to grant access to certain functionalities in gaps such
# as sending processing results back. There is currently only one property
# which is interpreted by GAPS: "staff".
userProperties = @DATADIR@/gaps/access

# Enables HTTP access logging to @LOGDIR@/gaps-http-access. Log files are
# created for 24h and kept for 7 days using log rotation.
accessLog = true

# Path to the template that generated index.html.
indexTemplate = @DATADIR@/gaps/index-custom.cs

# Path to media files (index.html, .css, .js, .png, ...) served by GAPS.
mediaDirectory = @DATADIR@/gaps/apps/2

# The QuakeLink event request URI. This is used as a default for all web
# applications.
quakelink = https://amplify.lbl.gov/quakelink/events/query

# Configures the MBTiles tile database if gaps should serve tiles itself. If
# mapURI is configured with a remote tile server, this is not required.
tileDB = @DATADIR@/maps/world-11/world-11-1.3.mbtiles

# List of additional tile layer profiles.
tileLayers = amplify

# Path to MBTiles database for this tile layer.
tileLayers.amplify.db = /home/sysop/seiscomp/share/maps/NV_all_12-18.mbtiles

# Range of zoom levels this tile layer is valid for. The format is
# [min-level]:[max-level].
tileLayers.amplify.levels = 12:18

# List of rectangles with respect to column / row indexes of the minimum zoom
# level. The format per rect is either +[min_x]+[min_y]+[max_x]+[max_y] or
# [column]x[rows]+[min_x]+[min_y].
tileLayers.amplify.rects = +682+2516+716+2560

# Alternative path to geofeatures displayed on the map. The default paths are
# ~/.seiscomp/bna and $SEISCOMP_ROOT/share/bna. To consider a BNA file for map
# display the corresponding configuration file (either map.cfg or gaps.cfg) in
# the respective bna directory or sub-directory must contain "apps.gaps=true".
map.geoFeaturePath = @DATADIR@/spatial

# Maximum zoom number for which the tiles source has available. The tiles on
# all zoom levels higher than mapMaxLevel will be loaded from mapMaxLevel level
# and auto-scaled.
apps.mapMaxLevel = 11

# Maximum allowed zoom level in the interactive map.
apps.mapMaxZoom = 18

# Path of the server WebSocket API for all applications. If not explicitly
# configured then the serverAPI path will be used.
apps.serverWSAPI = wss://amplify.lbl.gov/gaps/

# Relative path to a logo (brand) image shown in web applications. Give path
# relative to SEISCOMP_ROOT/share/gaps/apps. The image is scaled to the field
# dimension 157px x 38px preserving the aspect ratio.
apps.logoPath = share/images/AMT-crap-logo_v3.svg

# Available modes are: depth, magnitude, age
apps.colorMode = age

# The minimum latitude of the region.
apps.mapRegion.minimumLatitude = 37

# The minimum longitude of the region.
apps.mapRegion.minimumLongitude = -121

# The maximum latitude of the region.
apps.mapRegion.maximumLatitude = 42

# The maximum longitude of the region.
apps.mapRegion.maximumLongitude = -116

# Shows the initial region rectangle (mapRegion.*) in the central map.
apps.eqview.showRegionBounds = false

# Shows the selected widget region rectangle in the central map. This setting
# replaces the region rectangle (showRegionBounds) if both are set to true.
apps.eqview.showWidgetBounds = true

# If activated then the selected event is being shown exclusively on the map.
apps.eqview.singleEventMode = true

# Show UTC time in the front end.
apps.eqview.useUTC = true

# The time span for which the latest overall event will be selected.
apps.eqview.overallTimeSpan = 168

# Defines the available widgets. The first widget listed is taken as primary
# widget.
apps.eqview.widgets = region, dac, jersey, tungsten

# The widget title as it appears in the widgets title bar.
apps.eqview.widget.dac.title = DonA.Campbell

# The minimum latitude of the region.
apps.eqview.widget.dac.minimumLatitude = 38.80

# The minimum longitude of the region.
apps.eqview.widget.dac.minimumLongitude = -118.39

# The maximum latitude of the region.
apps.eqview.widget.dac.maximumLatitude = 38.87

# The maximum longitude of the region.
apps.eqview.widget.dac.maximumLongitude = -118.28

# The time span to be shown in hours.
apps.eqview.widget.dac.timeSpan = 168

# The widget title as it appears in the widgets title bar.
apps.eqview.widget.jersey.title = JerseyValley

# The minimum latitude of the region.
apps.eqview.widget.jersey.minimumLatitude = 40.145

# The minimum longitude of the region.
apps.eqview.widget.jersey.minimumLongitude = -117.505

# The maximum latitude of the region.
apps.eqview.widget.jersey.maximumLatitude = 40.195

# The maximum longitude of the region.
apps.eqview.widget.jersey.maximumLongitude = -117.447

# The time span to be shown in hours.
apps.eqview.widget.jersey.timeSpan = 168

# The widget title as it appears in the widgets title bar.
apps.eqview.widget.patua.title = Patua

# The minimum latitude of the region.
apps.eqview.widget.patua.minimumLatitude = 39.51

# The minimum longitude of the region.
apps.eqview.widget.patua.minimumLongitude = -119.17

# The maximum latitude of the region.
apps.eqview.widget.patua.maximumLatitude = 39.63

# The maximum longitude of the region.
apps.eqview.widget.patua.maximumLongitude = -119.01

# The time span to be shown in hours.
apps.eqview.widget.patua.timeSpan = 168

# Configures if picks are shown in the waveforms.
apps.eqview.widget.patua.showPicks = true

# The widget title as it appears in the widgets title bar.
apps.eqview.widget.region.title = Region

# The minimum latitude of the region.
apps.eqview.widget.region.minimumLatitude = 37

# The minimum longitude of the region.
apps.eqview.widget.region.minimumLongitude = -121

# The maximum latitude of the region.
apps.eqview.widget.region.maximumLatitude = 42

# The maximum longitude of the region.
apps.eqview.widget.region.maximumLongitude = -116

# The time span to be shown in hours.
apps.eqview.widget.region.timeSpan = 168

# Configures if picks are shown in the waveforms.
apps.eqview.widget.region.showPicks = true

# The widget title as it appears in the widgets title bar.
apps.eqview.widget.tungsten.title = TungstenMtn

# The minimum latitude of the region.
apps.eqview.widget.tungsten.minimumLatitude = 39.6472

# The minimum longitude of the region.
apps.eqview.widget.tungsten.minimumLongitude = -117.72

# The maximum latitude of the region.
apps.eqview.widget.tungsten.maximumLatitude = 39.6975

# The maximum longitude of the region.
apps.eqview.widget.tungsten.maximumLongitude = -117.65

# The time span to be shown in hours.
apps.eqview.widget.tungsten.timeSpan = 168

# The list of filters available in TraceView, format per item is
# "name;filter-string".
apps.traceview.filters = "HP 3 Hz  3rd order;BW_HP(3,3)",\
                         "BP 0.5 - 10 Hz  3rd order;BW(3,0.5,10)",\
                         "BP 1 - 15 Hz  3rd order;BW(3,1,15)",\
                         "BP 3 - 30 Hz 4th order;BW(4,3,30)",\
                         "Local detect;RMHP(1)>>ITAPER(5)>>BW(4,1,15)>>STALTA(0.4,10)",\
                         "Field Detect;RMHP(1)>>ITAPER(5)>>BW(4,3,30)>>STALTA(0.1,5)",\
                         "BP 0.7 - 2 Hz + STA/LTA(1,50);RMHP(10)->ITAPER(30)->BW(3,0.7,2)->STALTA(1,50)"

# Defines the default MapView mode that is used to color the station symbols.
# Valid values are "delay", "latency" and "groundmotion".
apps.mapview.mode = groundmotion

# The events time span to be shown in hours.
apps.mapview.eventTimeSpan = 4380

# Number of days to preload if scolv is started.
apps.scolv.loadEventDB = 180

# Show distances in km instead of degree.
apps.scolv.distInKM = true

# The list of active travel time table interfaces.
apps.scolv.ttt = libtau, LOCSAT

# List of filters available in the picker. If @ is prepended to the name of the
# filter it will be selected as default filter. The format of each entry is
# "name;definition", e.g., "BP 0.7 - 2 Hz 3rd order;BW(3,0.7,2)"
apps.scolv.picker.filters = "HP 3 Hz  3rd order;BW_HP(3,3)",\
                            "BP 0.5 - 10 Hz  3rd order;BW(3,0.5,10)",\
                            "BP 1 - 15 Hz  3rd order;BW(3,1,15)",\
                            "BP 3 - 30 Hz 4th order;BW(4,3,30)",\
                            "Local detect;RMHP(1)>>ITAPER(5)>>BW(4,1,15)>>STALTA(0.4,10)",\
                            "Field Detect;RMHP(1)>>ITAPER(5)>>BW(4,3,30)>>STALTA(0.1,5)",\
                            "BP 0.7 - 2 Hz + STA/LTA(1,50);RMHP(10)->ITAPER(30)->BW(3,0.7,2)->STALTA(1,50)"

# Configure the event age color gradient. Only applied if color mode is
# "magnitude".
scheme.colors.originSymbol.age.gradient = 0:ff0000:"1 hour",\
                                          3600:ff8000:"1 day",\
                                          86400:ffff00:"1 week",\
                                          604800:ffffff:"1 month",\
                                          2592000:808080:"older"
